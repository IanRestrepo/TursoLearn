---
import { db, Comment, like, eq } from 'astro:db';
import Welcome from '../components/Welcome.astro';
import Layout from '../layouts/Layout.astro';
import { Author } from 'astro:db';


// Welcome to Astro! Wondering what to do next? Check out the Astro documentation at https://docs.astro.build
// Don't want to use any of this? Delete everything in this file, the `assets`, `components`, and `layouts` directories, and start fresh.

if( Astro.request.method === 'POST' ) {
	const formData = await Astro.request.formData();
	const authorId = Number(formData.get('author')); // Convertir a número
	const body = formData.get('content');
	if (typeof authorId === 'number' && typeof body === 'string') {
    // Insertar datos del formulario en la tabla Comment
    await db.insert(Comment).values({ authorId, body });

	return Astro.redirect(Astro.url.pathname);
  }
}


// const comments = await db.select().from(Comment); -- Trae todos los comentarios desde la base de datos

// const comments = await db.select().from(Comment).where( -- Trae todos los comentarios filtrandolos con el metodo like
// 	like(Comment.body, '%Astro DB%')
// );

const comments = await db.select()
.from(Comment)
.innerJoin(Author, eq(Comment.authorId, Author.id)); // Learn: Esto realiza una inserción o InnerJoin a la tabla de Author y la relaciona con el Autor
---

<Layout>
	<Welcome />

	<form method="POST" style="display: grid">
		<label for="author">Author</label>
		<input type="number" name="author" id="author" required>

		<label for="content">Content</label>
		<textarea name="content" id="content" required></textarea>

		<button type="submit">Enviar</button>
	</form>

	<h2>Comments:</h2>
	{
		comments?.map(({ Author, Comment }) => (
			<article>
				<p>Author: { Author.name }</p>
				<p>{ Comment.body }</p>
			</article>
		)) 
	}
</Layout>
